name: CI-TEST
on:
  workflow_dispatch:
    inputs:
      repo_name:
        type: string
        description: "repo name"
        required: true
jobs:
  new:
    name: "Provision New"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Check out repo
        uses: actions/checkout@v3.6.0
      - name: Create new team repo
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.MANAGE_REPOS_TOKEN }}
        run: |
          REPO_EXISTS_ID=$(curl -L \
            -X GET \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ inputs.repo_name }} | jq .id)

          if [ $REPO_EXISTS_ID == null ]; then
            gh api \
              --method POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /orgs/${{ github.repository_owner }}/repos \
              -f name=${{ inputs.repo_name }} \
              -f visibility=public \
              -f auto_init=true
          else
            echo "Repository already exists"
          fi

      - name: Set new repo branch protection
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.MANAGE_REPOS_TOKEN }}
        run: |
          # SET BRANCH PROTECTION
          # Note that this API call requires:
          #  - Read and Write access to Repository Administration (All Repositories - Repository Permissions)
          #  - Read access to Repository Metadata (All Repositories - Repository Permissions)
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ inputs.repo_name }}/branches/main/protection \
            -d '{ "required_status_checks": { "strict": true, "checks": [ ] }, "required_pull_request_reviews": { "require_code_owner_reviews": true, "require_last_push_approval": true, "required_approving_review_count": 1 }, "enforce_admins": false, "restrictions": null }'

      - name: Add new repository to Gruntwork repo-allow-list
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.MANAGE_REPOS_TOKEN }}
        run: |
          cat .gruntwork/config.yml
          if [ $(yq '.repo-allow-list | any_c(.  == "${{ github.repository_owner }}/${{ inputs.repo_name }}")' .gruntwork/config.yml) == "false" ]; then
            yq '.repo-allow-list += "${{ github.repository_owner }}/${{ inputs.repo_name }}"' -i .gruntwork/config.yml
          fi
          cat .gruntwork/config.yml

      - name: Create Pull Request to add the new repo to the allow list
        id: create_pr
        uses: peter-evans/create-pull-request@v5.0.2
        with:
          base: main
          token: ${{ secrets.MANAGE_REPOS_TOKEN }} 
          path: ${{ github.event.repository.name }}
          branch: "enhancement/sdlc-account-team-${{ inputs.repo_name }}"
          commit-message: "Add repo"
          title: "Add repo"
          body: |
            This pull request updates things.
